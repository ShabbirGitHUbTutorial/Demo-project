<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>59.0</apiVersion>
    <decisions>
        <description>To check if the outage state as still restored</description>
        <name>SPEN_To_check_if_the_outage_state_as_still_restored</name>
        <label>To check if the outage state as still restored</label>
        <locationX>858</locationX>
        <locationY>232</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>To_check_if_the_outage_state_value_as_restored</name>
            <conditionLogic>1 AND (2 OR 3 OR 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Outage_State__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Restored</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HV_N</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HV_S</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>LV</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_Get_MessgingTaskRecordTypeId</targetReference>
            </connector>
            <label>To check if the outage state value is restored</label>
        </rules>
        <rules>
            <name>SPEN_To_Check_equality_of_Messaging_Task_Count</name>
            <conditionLogic>1 AND 4 AND 5 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetLastMessagingtaskCreateDateTime.SPEN_CreatedDateTime__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>$Record.SPEN_ConfirmedPartiallyConfirmedTime__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HV_S</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentType__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>HV_N</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Delog</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_IncidentStatus__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Complete</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_Get_MessgingTaskRecordTypeId_0</targetReference>
            </connector>
            <label>To Check equality of Messaging Task Count</label>
        </rules>
    </decisions>
    <description>This flow mainly works on the incident record gets updated</description>
    <environments>Default</environments>
    <formulas>
        <name>SPEN_QueueNameBasedOnZone</name>
        <dataType>String</dataType>
        <expression>IF(({!$Record.SPEN_ZoneRegionFormula__c} != null &amp;&amp; (CONTAINS({!$Record.SPEN_ZoneRegionFormula__c}, &apos;NORTH&apos;) ||  CONTAINS({!$Record.SPEN_ZoneRegionFormula__c}, &apos;UNKNOWN&apos;))), &apos;Messaging_Task_SPD&apos;, (IF({!$Record.SPEN_ZoneRegionFormula__c} !=null &amp;&amp; CONTAINS({!$Record.SPEN_ZoneRegionFormula__c}, &apos;SOUTH&apos;),&apos;Messaging_Task_SPM&apos;, &apos;Messaging_Task_SPD&apos;)))</expression>
    </formulas>
    <interviewLabel>Incident Flow on Update for outage state {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Incident Flow on Update for outage state</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <description>WHEN the outage state remains at &apos;restored&apos; for 10 minutes
THEN the incident restored messaging task should be created</description>
        <name>SPEN_Create_a_messaging_task_record</name>
        <label>Create a messaging task record</label>
        <locationX>1029</locationX>
        <locationY>559</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_Get_MessagingTaskQueue_OwnerID.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_Get_MessgingTaskRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <stringValue>Incident Restored</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>SPEN_Create_a_messaging_task_record_0</name>
        <label>Create a messaging task record of Hv Proactive</label>
        <locationX>807</locationX>
        <locationY>621</locationY>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_Get_MessagingTaskQueue_OwnerIDForHvPro.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_Get_MessgingTaskRecordTypeId_0.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <stringValue>HV proactive contact</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <description>This will give the Group Name where Type =&apos;Queue based on developer Name</description>
        <name>SPEN_Get_MessagingTaskQueue_OwnerID</name>
        <label>Get MessagingTaskQueue OwnerID</label>
        <locationX>1220</locationX>
        <locationY>422</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Create_a_messaging_task_record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_QueueNameBasedOnZone</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>This will give the Group Name where Type =&apos;Queue based on developer Name</description>
        <name>SPEN_Get_MessagingTaskQueue_OwnerIDForHvPro</name>
        <label>Get MessagingTaskQueue OwnerID</label>
        <locationX>932</locationX>
        <locationY>473</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Create_a_messaging_task_record_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Type</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Queue</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_QueueNameBasedOnZone</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <queriedFields>Id</queriedFields>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>To get the record type id of the type Incident</description>
        <name>SPEN_Get_MessgingTaskRecordTypeId</name>
        <label>Get MessgingTaskRecordTypeId</label>
        <locationX>1037</locationX>
        <locationY>291</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Get_MessagingTaskQueue_OwnerID</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_MessagingTask__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>To get the record type id of the type Incident</description>
        <name>SPEN_Get_MessgingTaskRecordTypeId_0</name>
        <label>Get MessgingTaskRecordTypeId</label>
        <locationX>838</locationX>
        <locationY>368</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Get_MessagingTaskQueue_OwnerIDForHvPro</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_MessagingTask__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <queriedFields>Id</queriedFields>
        <sortField>LastModifiedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetLastMessagingtaskCreateDateTime</name>
        <label>Get last messaging task create date/time</label>
        <locationX>479</locationX>
        <locationY>482</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_To_check_if_the_outage_state_as_still_restored</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <queriedFields>Id</queriedFields>
        <queriedFields>SPEN_CreatedDateTime__c</queriedFields>
        <sortField>SPEN_CreatedDateTime__c</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>330</locationX>
        <locationY>48</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>or</filterLogic>
        <filters>
            <field>SPEN_Outage_State__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Restored</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Outage_State__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Confirmed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Outage_State__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Partially Confirmed</stringValue>
            </value>
        </filters>
        <object>Incident</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>SPEN_Post_Updates_of_outage_state_as_Restored</name>
            <connector>
                <targetReference>SPEN_To_check_if_the_outage_state_as_still_restored</targetReference>
            </connector>
            <label>Post Updates of outage state as Restored</label>
            <offsetNumber>10</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>SPEN_OutageStateDateTime__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <scheduledPaths>
            <name>SPEN_HV_proactive_check_based_on_Outage_state</name>
            <connector>
                <targetReference>SPEN_GetLastMessagingtaskCreateDateTime</targetReference>
            </connector>
            <label>HV proactive check based on Outage state</label>
            <offsetNumber>15</offsetNumber>
            <offsetUnit>Minutes</offsetUnit>
            <recordField>SPEN_ConfirmedPartiallyConfirmedTime__c</recordField>
            <timeSource>RecordField</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>SPEN_TotalCurrentTask</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
