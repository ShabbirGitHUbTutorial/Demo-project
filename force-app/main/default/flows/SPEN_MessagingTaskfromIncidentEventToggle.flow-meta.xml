<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>ErrorFlag</name>
        <label>ErrorFlag</label>
        <locationX>848</locationX>
        <locationY>7844</locationY>
        <assignmentItems>
            <assignToReference>SMSErrorFlag</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendCommunicationButtonScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssigningRecordTypeIds</name>
        <label>SPEN_AssigningRecordTypeIds</label>
        <locationX>921</locationX>
        <locationY>5116</locationY>
        <assignmentItems>
            <assignToReference>SPEN_setofrecordtypeIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>SPEN_loopRecordTypeIds.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_loopRecordTypeIds</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentRemoveIVRMessageTemplate</name>
        <label>AssignmentRemoveIVRMessageTemplate</label>
        <locationX>324</locationX>
        <locationY>4286</locationY>
        <assignmentItems>
            <assignToReference>SPEN_GetIncidentRecord.SPEN_IVRMessages__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>SPEN_GetIncidentRecord.SPEN_IVRMessage__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_RemoveIncidentIVRNameandValue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendSMStoNonPSRCalledin</name>
        <label>AssignmentSendSMStoNonPSRCalledin</label>
        <locationX>324</locationX>
        <locationY>1934</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendSMStoNonPSRCalledin.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendSMStoPSRCustomersinScopeDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendSMStoNonPSRCustomersinScope</name>
        <label>AssignmentSendSMStoNonPSRCustomersinScope</label>
        <locationX>324</locationX>
        <locationY>1598</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendSMStoNonPSRCustomersinScope.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendSMStoNonPSRCalledinDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendSMStoPSRCalledin</name>
        <label>AssignmentSendSMStoPSRCalledin</label>
        <locationX>332</locationX>
        <locationY>2400</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendSMStoPSRCalledin.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScopeDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendSMStoPSRCustomersinScope</name>
        <label>AssignmentSendSMStoPSRCustomersinScope</label>
        <locationX>319</locationX>
        <locationY>2198</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendSMStoPSRCustomersinScope.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendSMStoPSRCalledinDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendVoiceAlertstoNonPSRCalledin</name>
        <label>AssignmentSendVoiceAlertstoNonPSRCalledin</label>
        <locationX>324</locationX>
        <locationY>2942</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendVoiceAlertstoPSRCustomersinScopeDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendVoiceAlertstoNonPSRCustomersinScope</name>
        <label>AssignmentSendVoiceAlertstoNonPSRCustomersinScope</label>
        <locationX>331</locationX>
        <locationY>2688</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendVoiceAlertstoNonPSRCalledinDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendVoiceAlertstoPSRCalledin</name>
        <label>AssignmentSendVoiceAlertstoPSRCalledin</label>
        <locationX>309</locationX>
        <locationY>3459</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendVoiceAlertstoPSRCalledin.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_UpdateIncidentIVRMessageDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentSendVoiceAlertstoPSRCustomersinScope</name>
        <label>AssignmentSendVoiceAlertstoPSRCustomersinScope</label>
        <locationX>321</locationX>
        <locationY>3235</locationY>
        <assignmentItems>
            <assignToReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendVoiceAlertstoPSRCalledinDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentUpdateIncidentIVRMessage</name>
        <label>AssignmentUpdateIncidentIVRMessage</label>
        <locationX>327</locationX>
        <locationY>3699</locationY>
        <assignmentItems>
            <assignToReference>SPEN_UpdateIncidentIVRMessage.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_UpdateZoneIVRMessageDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignmentUpdateZoneIVRMessage</name>
        <label>AssignmentUpdateZoneIVRMessage</label>
        <locationX>324</locationX>
        <locationY>3950</locationY>
        <assignmentItems>
            <assignToReference>SPEN_UpdateZoneIVRMessage.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_RemoveIncidentIVRMessageTemplateDecision</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>SPEN_AssignRemoveIncidentIVRMessage</name>
        <label>AssignRemoveIncidentIVRMessage</label>
        <locationX>324</locationX>
        <locationY>1262</locationY>
        <assignmentItems>
            <assignToReference>SPEN_RemoveIncidentIVRMessage.value</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>SPEN_SendSMStoNonPSRCustomersinScopeDecision</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>SPEN_ZoneComponentHide</name>
        <dataType>Boolean</dataType>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </constants>
    <decisions>
        <name>SMS_Validation</name>
        <label>SMS Validation</label>
        <locationX>602</locationX>
        <locationY>8194</locationY>
        <defaultConnector>
            <targetReference>SPEN_CheckTheExistanceOfCommunication</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SMSVAValidationCheck</name>
            <conditionLogic>((1 OR 2) AND (3 OR 4 OR 5 OR 6)) OR ((7 OR 8) AND (9 OR 10 OR 11 OR 12))</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPENSMSVABothPresent</targetReference>
            </connector>
            <label>SMSVAValidationCheck</label>
        </rules>
    </decisions>
    <decisions>
        <description>To check the outage state value on the incident</description>
        <name>SPEN_Check_Outage_stage</name>
        <label>Check Outage stage</label>
        <locationX>704</locationX>
        <locationY>359</locationY>
        <defaultConnector>
            <targetReference>SPEN_CustomMetadataValues_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SPEN_Has_Confirmed_or_Partially_Confirmed_Outage_state</name>
            <conditionLogic>(1 OR 2 OR 3) AND 4 AND 5</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetMessagingTaskRecord.Incident_Outage_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Confirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_GetMessagingTaskRecord.Incident_Outage_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Confirmed</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_GetMessagingTaskRecord.Incident_Outage_Status__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Restored</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Incident_Outage_Flag__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>LV</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_CustomMetadataValues</targetReference>
            </connector>
            <label>Has Confirmed or Partially Confirmed Outage state</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_CheckDiffofCommunicationCurrentDecision</name>
        <label>CheckDiffofCommunicationCurrentDecision</label>
        <locationX>456</locationX>
        <locationY>686</locationY>
        <defaultConnector>
            <targetReference>SPEN_ToggleScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CheckDiffofCommunicationCurrentDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_DiffofCommunicationCurrent</leftValueReference>
                <operator>GreaterThanOrEqualTo</operator>
                <rightValue>
                    <numberValue>180.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_UpdateIncidentfor3Hours</targetReference>
            </connector>
            <label>CheckDiffofCommunicationCurrentDecision</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_CheckTheExistanceOfCommunication</name>
        <label>SPEN_CheckTheExistanceOfCommunication</label>
        <locationX>998</locationX>
        <locationY>8124</locationY>
        <defaultConnector>
            <targetReference>SPEN_ShowPreviewInformation</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>CheckIfSMSVAInvolved</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ErrorFlag</targetReference>
            </connector>
            <label>CheckIfSMSVAInvolved</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_InstantwithSMS</name>
        <label>InstantwithSMS</label>
        <locationX>456</locationX>
        <locationY>9446</locationY>
        <defaultConnector>
            <targetReference>SPEN_SchedulewithSMS</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>InsSMS</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_InsSMSCreateCommunicationScheduler</targetReference>
            </connector>
            <label>InsSMS</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_InstantwithVoiceAlert</name>
        <label>InstantwithVoiceAlert</label>
        <locationX>456</locationX>
        <locationY>8774</locationY>
        <defaultConnector>
            <targetReference>SPEN_SchedulewithVoiceAlert</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>IVoiceAlert</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_IVACreateCommunicationScheduler</targetReference>
            </connector>
            <label>IVoiceAlert</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_RemoveIncidentIVRMessageDecision</name>
        <label>RemoveIncidentIVRMessageDecision</label>
        <locationX>456</locationX>
        <locationY>1142</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendSMStoNonPSRCustomersinScopeDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RemoveIncidentIVRMessage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_RemoveIncidentIVRMessage.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignRemoveIncidentIVRMessage</targetReference>
            </connector>
            <label>RemoveIncidentIVRMessage</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_RemoveIncidentIVRMessageTemplateDecision</name>
        <label>RemoveIncidentIVRMessageTemplateDecision</label>
        <locationX>456</locationX>
        <locationY>4166</locationY>
        <defaultConnector>
            <targetReference>SPEN_GetRecordTypeIdVAMessage</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>RemoveIncidentIVRMessageTemplate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_RemoveIncidentIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentRemoveIVRMessageTemplate</targetReference>
            </connector>
            <label>RemoveIncidentIVRMessageTemplate</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SchedulewithSMS</name>
        <label>SchedulewithSMS</label>
        <locationX>456</locationX>
        <locationY>9743</locationY>
        <defaultConnector>
            <targetReference>SPEN_StatusUpdateDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SchSMS</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_SchSMSCreateCommunicationScheduler</targetReference>
            </connector>
            <label>SchSMS</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SchedulewithVoiceAlert</name>
        <label>SchedulewithVoiceAlert</label>
        <locationX>456</locationX>
        <locationY>9110</locationY>
        <defaultConnector>
            <targetReference>SPEN_InstantwithSMS</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SVoiceAlert</name>
            <conditionLogic>1 AND (2 OR 3 OR 4 OR 5)</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_SVACreateCommunicationScheduler</targetReference>
            </connector>
            <label>SVoiceAlert</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendSMStoNonPSRCalledinDecision</name>
        <label>SendSMStoNonPSRCalledinDecision</label>
        <locationX>456</locationX>
        <locationY>1814</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendSMStoPSRCustomersinScopeDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendSMStoNonPSRCalledin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendSMStoNonPSRCalledin</targetReference>
            </connector>
            <label>SendSMStoNonPSRCalledin</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendSMStoNonPSRCustomersinScopeDecision</name>
        <label>SendSMStoNonPSRCustomersinScopeDecision</label>
        <locationX>456</locationX>
        <locationY>1478</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendSMStoNonPSRCalledinDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendSMStoNonPSRCustomersinScope</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendSMStoNonPSRCustomersinScope</targetReference>
            </connector>
            <label>SendSMStoNonPSRCustomersinScope</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendSMStoPSRCalledinDecision</name>
        <label>SendSMStoPSRCalledinDecision</label>
        <locationX>438</locationX>
        <locationY>2310</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScopeDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendSMStoPSRCalledinDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendSMStoPSRCalledin</targetReference>
            </connector>
            <label>SendSMStoPSRCalledinDecision</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendSMStoPSRCustomersinScopeDecision</name>
        <label>SendSMStoPSRCustomersinScopeDecision</label>
        <locationX>452</locationX>
        <locationY>2087</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendSMStoPSRCalledinDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendSMStoPSRCustomersinScope</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendSMStoPSRCustomersinScope</targetReference>
            </connector>
            <label>SendSMStoPSRCustomersinScope</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendVoiceAlertstoNonPSRCalledinDecision</name>
        <label>SendVoiceAlertstoNonPSRCalledinDecision</label>
        <locationX>456</locationX>
        <locationY>2822</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendVoiceAlertstoPSRCustomersinScopeDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendVoiceAlertstoNonPSRCalledin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendVoiceAlertstoNonPSRCalledin</targetReference>
            </connector>
            <label>SendVoiceAlertstoNonPSRCalledin</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendVoiceAlertstoNonPSRCustomersinScopeDecision</name>
        <label>SendVoiceAlertstoNonPSRCustomersinScopeDecision</label>
        <locationX>456</locationX>
        <locationY>2566</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendVoiceAlertstoNonPSRCalledinDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendVoiceAlertstoNonPSRCustomersinScope</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendVoiceAlertstoNonPSRCustomersinScope</targetReference>
            </connector>
            <label>SendVoiceAlertstoNonPSRCustomersinScope</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendVoiceAlertstoPSRCalledinDecision</name>
        <label>SendVoiceAlertstoPSRCalledinDecision</label>
        <locationX>448</locationX>
        <locationY>3342</locationY>
        <defaultConnector>
            <targetReference>SPEN_UpdateIncidentIVRMessageDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendVoiceAlertstoPSRCalledin</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendVoiceAlertstoPSRCalledin</targetReference>
            </connector>
            <label>SendVoiceAlertstoPSRCalledin</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_SendVoiceAlertstoPSRCustomersinScopeDecision</name>
        <label>SendVoiceAlertstoPSRCustomersinScopeDecision</label>
        <locationX>453</locationX>
        <locationY>3085</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendVoiceAlertstoPSRCalledinDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SendVoiceAlertstoPSRCustomersinScope</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentSendVoiceAlertstoPSRCustomersinScope</targetReference>
            </connector>
            <label>SendVoiceAlertstoPSRCustomersinScope</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_StatusUpdateDecision</name>
        <label>Status Update Decision</label>
        <locationX>450</locationX>
        <locationY>10074</locationY>
        <defaultConnector>
            <targetReference>SPEN_UpdateMessagingTaskComments</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SPEN_StatusUpdate</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_RemoveIncidentIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_UpdateIncidentIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_UpdateZoneIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_UpdateStatus</targetReference>
            </connector>
            <label>Status Update</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_UpdateIncidentIVRMessageDecision</name>
        <label>UpdateIncidentIVRMessageDecision</label>
        <locationX>456</locationX>
        <locationY>3592</locationY>
        <defaultConnector>
            <targetReference>SPEN_UpdateZoneIVRMessageDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>UpdateIncidentIVRMessage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_UpdateIncidentIVRMessage.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentUpdateIncidentIVRMessage</targetReference>
            </connector>
            <label>UpdateIncidentIVRMessage</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_UpdateIncidentIVRTemplateIfTrueDecision</name>
        <label>UpdateIncidentIVRTemplateIfTrueDecision</label>
        <locationX>456</locationX>
        <locationY>7262</locationY>
        <defaultConnector>
            <targetReference>SPEN_UpdateZoneIVRTemplateIfTrueDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>UpdateIncidentIVRTemplateIfTrueDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_UpdateIncidentIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_UpdateIncidentIVRTemplateName</targetReference>
            </connector>
            <label>UpdateIncidentIVRTemplateIfTrueDecision</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_UpdateZoneIVRMessageDecision</name>
        <label>UpdateZoneIVRMessageDecision</label>
        <locationX>456</locationX>
        <locationY>3830</locationY>
        <defaultConnector>
            <targetReference>SPEN_RemoveIncidentIVRMessageTemplateDecision</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>UpdateZoneIVRMessage</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_UpdateZoneIVRMessage.value</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_AssignmentUpdateZoneIVRMessage</targetReference>
            </connector>
            <label>UpdateZoneIVRMessage</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_UpdateZoneIVRTemplateIfTrueDecision</name>
        <label>UpdatezIVRTemplateIfTrueDecision</label>
        <locationX>456</locationX>
        <locationY>7718</locationY>
        <defaultConnector>
            <targetReference>SPEN_SendCommunicationButtonScreen</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>UpdateZoneIVRTemplateIfTrueDecision</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_UpdateZoneIVRMessage.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_UpdateZoneIVRMessageTemplateNameinZoneObject</targetReference>
            </connector>
            <label>UpdateZoneIVRTemplateIfTrueDecision</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPENSMSVABothPresent</name>
        <label>SPENSMSVABothPresent</label>
        <locationX>787</locationX>
        <locationY>8241</locationY>
        <defaultConnector>
            <targetReference>ErrorFlag</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>BothSMSVAInvolved</name>
            <conditionLogic>((11 OR 12) AND (1 OR 2 OR 3 OR 4)) AND ((9 OR 10) AND (5 OR 6 OR 7 OR 8))</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_ShowPreviewInformation</targetReference>
            </connector>
            <label>BothSMSVAInvolved</label>
        </rules>
        <rules>
            <name>CheckOnlySMS</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4 OR 5 OR 6) AND 7 AND 8 AND 9 AND 10</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_ShowPreviewInformation</targetReference>
            </connector>
            <label>CheckOnlySMS</label>
        </rules>
        <rules>
            <name>CheckOnlyVA</name>
            <conditionLogic>(1 OR 2) AND (3 OR 4 OR 5 OR 6 ) AND  7 AND 8 AND 9 AND 10</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_ShowPreviewInformation</targetReference>
            </connector>
            <label>CheckOnlyVA</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>SPEN_GetIncidentIVRMessageTemplates</name>
        <collectionReference>SPEN_GetAllIncidentIVRMessageTemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SPEN_GetNonPSRSMSTemplates</name>
        <collectionReference>SPEN_GetAllNonPSRSMSTemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SPEN_GetNonPSRVATemplates</name>
        <collectionReference>SPEN_GetAllNonPSRVATemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SPEN_GetPSRSMSTemplates</name>
        <collectionReference>SPEN_GetAllPSRSMSTemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SPEN_GetPSRVATemplates</name>
        <collectionReference>SPEN_GetAllPSRVATemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <dynamicChoiceSets>
        <name>SPEN_GetZoneIVRMessageTemplates</name>
        <collectionReference>SPEN_GetAllZoneIVRMessageTemplates</collectionReference>
        <dataType>String</dataType>
        <displayField>Name</displayField>
        <object>SPEN_IVRMessage__c</object>
        <valueField>Name</valueField>
    </dynamicChoiceSets>
    <environments>Default</environments>
    <formulas>
        <name>SPEN_CheckNonPSRMessageTemplateWithRestoreInformation</name>
        <dataType>String</dataType>
        <expression>IF({!SPEN_Include_Restoration_Confirmation}, {!SPEN_DisplayNonPSRSMSTemplate} +&apos;  &apos;+ {!SPEN_RestoreConfirmationMessageReadOnlyTextShownOnFlow},  {!SPEN_DisplayNonPSRSMSTemplate})</expression>
    </formulas>
    <formulas>
        <name>SPEN_CheckPSRMessageTemplateWithRestoreInformation</name>
        <dataType>String</dataType>
        <expression>IF({!SPEN_Include_Restoration_Confirmation}, {!SPEN_DisplayPSRSMSTemplate} +&apos;  &apos;+ {!SPEN_RestoreConfirmationMessageReadOnlyTextShownOnFlow},  {!SPEN_DisplayPSRSMSTemplate})</expression>
    </formulas>
    <formulas>
        <description>To check the Blackout window period for SMS alert</description>
        <name>SPEN_compareBetweenBlackoutAndNow</name>
        <dataType>Boolean</dataType>
        <expression>if(OR(AND(ISBLANK({!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}),ISBLANK({!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c})),(AND((UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;)) &lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;))), OR(AND((UNIXTIMESTAMP({!$Flow.CurrentDateTime}) &lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime})&lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))),(AND((UNIXTIMESTAMP({!$Flow.CurrentDateTime})&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))),(UNIXTIMESTAMP({!$Flow.CurrentDateTime})&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))))))) , (AND((UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime})&lt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime}) &gt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))))), true, false)</expression>
    </formulas>
    <formulas>
        <description>To check the blackout window period for Voice alert</description>
        <name>SPEN_compareBetweenBlackoutAndNowForVA</name>
        <dataType>Boolean</dataType>
        <expression>if(OR(AND(ISBLANK({!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}),ISBLANK({!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c})),(AND((UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;)) &lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;))), OR(AND((UNIXTIMESTAMP({!$Flow.CurrentDateTime}) &lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime})&lt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))),(AND((UNIXTIMESTAMP({!$Flow.CurrentDateTime})&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))),(UNIXTIMESTAMP({!$Flow.CurrentDateTime})&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))))))) , (AND((UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))&gt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime})&lt;UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;))), (UNIXTIMESTAMP({!$Flow.CurrentDateTime}) &gt; UNIXTIMESTAMP(DATETIMEVALUE(TEXT(TODAY()) +&apos; &apos; + {!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}+&apos;:00&apos;)))))), true, false)</expression>
    </formulas>
    <formulas>
        <name>SPEN_DiffofCommunicationCurrent</name>
        <dataType>Number</dataType>
        <expression>(UNIXTIMESTAMP(now()) - UNIXTIMESTAMP({!SPEN_GetIncidentRecord.SPEN_LastCommunicationTime__c}))/60</expression>
        <scale>0</scale>
    </formulas>
    <formulas>
        <description>This formula returns boolean true or false based on the conditions like messaging task event is Incident Restored and has confirmed Outage State Reached?</description>
        <name>SPEN_IncidentRestoredWithConfrmedNeverReached</name>
        <dataType>Boolean</dataType>
        <expression>IF((ISPICKVAL({!SPEN_GetMessagingTaskRecord.SPEN_Event__c}, &apos;Incident Restored&apos;))&amp;&amp; NOT(ISPICKVAL({!SPEN_GetIncidentRecord.SPEN_IncidentType__c},&apos;LV&apos;)) &amp;&amp; NOT({!SPEN_GetIncidentRecord.SPEN_has_confirmed_Outage_State_Reached__c}),false, true)</expression>
    </formulas>
    <formulas>
        <description>This formula returns boolean true or false based on the conditions like messaging task event is Incident Restored and has confirmed Outage State Reached?</description>
        <name>SPEN_IncidentRestoredWithConfrmedReached</name>
        <dataType>Boolean</dataType>
        <expression>IF((ISPICKVAL({!SPEN_GetMessagingTaskRecord.SPEN_Event__c}, &apos;Incident Restored&apos;) &amp;&amp; {!SPEN_GetMessagingTaskRecord.SPEN_IncidentId__r.SPEN_has_confirmed_Outage_State_Reached__c}), false, true)</expression>
    </formulas>
    <formulas>
        <description>To control the LV type of incidents PSR Called in visibility</description>
        <name>SPEN_LVPSR</name>
        <dataType>Boolean</dataType>
        <expression>IF( (ISPICKVAL({!SPEN_GetMessagingTaskRecord.SPEN_IncidentId__r.SPEN_IncidentType__c}, &apos;LV&apos;) &amp;&amp; ISPICKVAL({!SPEN_GetMessagingTaskRecord.SPEN_Event__c}, &apos;Incident Restored&apos;)), true, false)</expression>
    </formulas>
    <formulas>
        <name>SPEN_RestorationConfirmationBasedValue</name>
        <dataType>String</dataType>
        <expression>IF({!SPEN_Include_Restoration_Confirmation}, {!SPEN_SelectedPSRSMSTemplate}+&apos;TestData&apos;, {!SPEN_SelectedPSRSMSTemplate})</expression>
    </formulas>
    <formulas>
        <description>This flag enables the visibility of the messaging task comments input box.</description>
        <name>SPEN_ShowMessagingTaskCommentsFlag</name>
        <dataType>Boolean</dataType>
        <expression>IF(({!SPEN_UpdateIncidentIVRMessage.value} || {!SPEN_UpdateZoneIVRMessage.value} || {!SPEN_RemoveIncidentIVRMessage.value} || {!SPEN_SendSMStoPSRCustomersinScope.value} || {!SPEN_SendSMStoNonPSRCustomersinScope.value} || {!SPEN_SendSMStoPSRCalledin.value} || {!SPEN_SendSMStoNonPSRCalledin.value} || {!SPEN_SendVoiceAlertstoPSRCustomersinScope.value} || {!SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value} || {!SPEN_SendVoiceAlertstoPSRCalledin.value} || {!SPEN_SendVoiceAlertstoNonPSRCalledin.value}), false, true)</expression>
    </formulas>
    <formulas>
        <description>To check if the DroppedSuppliedWithNotice is Checked</description>
        <name>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</name>
        <dataType>Boolean</dataType>
        <expression>IF({!SPEN_GetMessagingTaskRecord.SPEN_DroppedSupplyCheckbox__c}, true, false)</expression>
    </formulas>
    <formulas>
        <name>tocheckblackoutwindow</name>
        <dataType>DateTime</dataType>
        <expression>DATETIMEVALUE(TEXT(TODAY()) +&apos;  &apos; + {!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}+&apos;:00&apos;)</expression>
    </formulas>
    <interviewLabel>Messaging Task from Incident Event Toggle {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Messaging Task from Incident Event Toggle</label>
    <loops>
        <name>SPEN_loopRecordTypeIds</name>
        <label>SPEN_loopRecordTypeIds</label>
        <locationX>668</locationX>
        <locationY>5118</locationY>
        <collectionReference>SPEN_recordVars</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>SPEN_AssigningRecordTypeIds</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>SPEN_GetAllIncidentIVRMessageTemplates</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>SPEN_InsSMSCreateCommunicationScheduler</name>
        <label>InsSMSCreateCommunicationScheduler</label>
        <locationX>324</locationX>
        <locationY>9566</locationY>
        <connector>
            <targetReference>SPEN_SchedulewithSMS</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_SMSCommGetRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Message__c</field>
            <value>
                <elementReference>SPEN_CheckPSRMessageTemplateWithRestoreInformation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_MessagingTaskId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_NonPSRMessage__c</field>
            <value>
                <elementReference>SPEN_CheckNonPSRMessageTemplateWithRestoreInformation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendNow__c</field>
            <value>
                <elementReference>SPEN_InstantSMSCommunicationCheckbox</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMSMCtoPSR__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMSMCtocalledin__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoAllCustomerinScope__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoPSRCalledin__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_CommunicationScheduler__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>SPEN_IVACreateCommunicationScheduler</name>
        <label>IVACreateCommunicationScheduler</label>
        <locationX>324</locationX>
        <locationY>8894</locationY>
        <connector>
            <targetReference>SPEN_SchedulewithVoiceAlert</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_VACommGetRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Message__c</field>
            <value>
                <elementReference>SPEN_DisplayPSRVoiceAlertTemplate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_MessagingTaskId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_NonPSRMessage__c</field>
            <value>
                <elementReference>SPEN_DisplayNonPSRVoiceAlertTemplate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendNow__c</field>
            <value>
                <elementReference>SPEN_InstantVoiceAlertCommunicationCheckbox</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoAllCustomerinScope__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoPSRCalledin__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVoiceAlerttoPSR__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVoiceAlerttocalledin__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Processing</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_CommunicationScheduler__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>SPEN_SchSMSCreateCommunicationScheduler</name>
        <label>SchSMSCreateCommunicationScheduler</label>
        <locationX>324</locationX>
        <locationY>9902</locationY>
        <connector>
            <targetReference>SPEN_StatusUpdateDecision</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_SMSCommGetRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Message__c</field>
            <value>
                <elementReference>SPEN_CheckPSRMessageTemplateWithRestoreInformation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_MessagingTaskId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_NonPSRMessage__c</field>
            <value>
                <elementReference>SPEN_CheckNonPSRMessageTemplateWithRestoreInformation</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_ScheduledDateTime__c</field>
            <value>
                <elementReference>SPEN_DateTimeforScheduleSMSCommunication</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendNow__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMSMCtoPSR__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMSMCtocalledin__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoAllCustomerinScope__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoPSRCalledin__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Scheduled</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_CommunicationScheduler__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>SPEN_SVACreateCommunicationScheduler</name>
        <label>SVACreateCommunicationScheduler</label>
        <locationX>324</locationX>
        <locationY>9230</locationY>
        <connector>
            <targetReference>SPEN_InstantwithSMS</targetReference>
        </connector>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <elementReference>SPEN_VACommGetRecordTypeId.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Event__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_IncidentId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Message__c</field>
            <value>
                <elementReference>SPEN_DisplayPSRVoiceAlertTemplate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_MessagingTaskId__c</field>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_NonPSRMessage__c</field>
            <value>
                <elementReference>SPEN_DisplayNonPSRVoiceAlertTemplate</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_ScheduledDateTime__c</field>
            <value>
                <elementReference>SPEN_DateTimeforScheduleVoiceAlertCommunication</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendNow__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoAllCustomerinScope__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoPSRCalledin__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVoiceAlerttoPSR__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVoiceAlerttocalledin__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Scheduled</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_CommunicationScheduler__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>SPEN_CustomMetadataValues</name>
        <label>Custom Metadata Values</label>
        <locationX>457</locationX>
        <locationY>445</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_SetZoneRecordRelatedtoIncidentinVariable</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_MessagingTaskEvent__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Applicable_INC_Type__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_DroppedSupplyWithNotice__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.SPEN_droppedsupply__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Outagestate__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Incident_Outage_Status__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_Incident_status_to_action_mapping__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_CustomMetadataValues_0</name>
        <label>Custom Metadata Values</label>
        <locationX>719</locationX>
        <locationY>512</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_SetZoneRecordRelatedtoIncidentinVariable</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_MessagingTaskEvent__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>Applicable_INC_Type__c</field>
            <operator>Contains</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_DroppedSupplyWithNotice__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.SPEN_droppedsupply__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Outagestate__c</field>
            <operator>IsNull</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_Incident_status_to_action_mapping__mdt</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllIncidentIVRMessageTemplates</name>
        <label>Get All Incident IVR Message Templates</label>
        <locationX>844</locationX>
        <locationY>5364</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdZoneIVRMessage</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3)</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>In</operator>
            <value>
                <elementReference>SPEN_setofrecordtypeIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Blank Template</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllNonPSRSMSTemplates</name>
        <label>Get All Non PSR SMS Templates</label>
        <locationX>664</locationX>
        <locationY>4976</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdIncIVRMessage</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdSMSMessage.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Blank Template</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_TemplateIdentifier__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>PSRNo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllNonPSRVATemplates</name>
        <label>Get All Non PSR VA Templates</label>
        <locationX>753</locationX>
        <locationY>4740</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdSMSMessage</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdVAMessage.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Blank Template</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_TemplateIdentifier__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>PSRNo</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllPSRSMSTemplates</name>
        <label>Get All PSR SMS Templates</label>
        <locationX>313</locationX>
        <locationY>4991</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetAllNonPSRSMSTemplates</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdSMSMessage.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Blank Template</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_TemplateIdentifier__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>PSRYes</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllPSRVATemplates</name>
        <label>Get All PSR VA Templates</label>
        <locationX>325</locationX>
        <locationY>4757</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetAllNonPSRVATemplates</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3) AND 4</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdVAMessage.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Blank Template</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_TemplateIdentifier__c</field>
            <operator>Contains</operator>
            <value>
                <stringValue>PSRYes</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetAllZoneIVRMessageTemplates</name>
        <label>Get All Zone IVR Message Templates</label>
        <locationX>456</locationX>
        <locationY>5462</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_TemplateScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdZoneIVRMessage.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_IVRMessage__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetIncidentRecord</name>
        <label>Get Incident Record</label>
        <locationX>456</locationX>
        <locationY>326</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Check_Outage_stage</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Incident</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetIVROperatingHourSMSBlackoutWindow</name>
        <label>GetIVROperatingHourSMSBlackoutWindow</label>
        <locationX>456</locationX>
        <locationY>6902</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdVABlackoutWindow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdSMSBlackoutWindow.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_isActive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_IVROperatinghours__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetIVROperatingHourVABlackoutWindow</name>
        <label>GetIVROperatingHourVABlackoutWindow</label>
        <locationX>456</locationX>
        <locationY>7142</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_UpdateIncidentIVRTemplateIfTrueDecision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetRecordTypeIdVABlackoutWindow.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_isActive__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_IVROperatinghours__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetMessagingTaskRecord</name>
        <label>Get Messaging Task Record</label>
        <locationX>456</locationX>
        <locationY>206</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetIncidentRecord</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>recordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdIncIVRMessage</name>
        <label>GetRecordTypeIdIncIVRMessage</label>
        <locationX>455</locationX>
        <locationY>5108</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_loopRecordTypeIds</targetReference>
        </connector>
        <filterLogic>1 AND (2 OR 3 OR 4)</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVRMessage__c</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident_Dispatch</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident_AOS</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident_Initial</stringValue>
            </value>
        </filters>
        <object>RecordType</object>
        <outputReference>SPEN_recordVars</outputReference>
        <queriedFields>Id</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdSMSBlackoutWindow</name>
        <label>GetRecordTypeIdSMSBlackoutWindow</label>
        <locationX>456</locationX>
        <locationY>6782</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetIVROperatingHourSMSBlackoutWindow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_SMSBlackoutWindow</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVROperatingHours__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdSMSMessage</name>
        <label>GetRecordTypeIdSMSMessage</label>
        <locationX>456</locationX>
        <locationY>4862</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetAllPSRSMSTemplates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SMS</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVRMessage__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdVABlackoutWindow</name>
        <label>GetRecordTypeIdVABlackoutWindow</label>
        <locationX>456</locationX>
        <locationY>7022</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetIVROperatingHourVABlackoutWindow</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_VABlackoutWindow</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVROperatingHours__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdVAMessage</name>
        <label>GetRecordTypeIdVAMessage</label>
        <locationX>456</locationX>
        <locationY>4622</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetAllPSRVATemplates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_VoiceAlert</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVRMessage__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetRecordTypeIdZoneIVRMessage</name>
        <label>GetRecordTypeIdZoneIVRMessage</label>
        <locationX>456</locationX>
        <locationY>5342</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetAllZoneIVRMessageTemplates</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Zone</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_IVRMessage__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedIncidentIVRTemplate</name>
        <label>Get Selected Incident IVR Template</label>
        <locationX>456</locationX>
        <locationY>5942</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetSelectedZoneIVRTemplate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentIVRMessageTemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedIncidentIVRID</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>SPEN_SelectedIncidentIVRTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedNonPSRSMSTemplate</name>
        <label>Get Selected Non PSR SMS Template</label>
        <locationX>749</locationX>
        <locationY>5837</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetSelectedIncidentIVRTemplate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetNonPSRSMSTemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedNonPSRSMSTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedNonPSRVATemplate</name>
        <label>Get Selected Non PSR VA Template</label>
        <locationX>743</locationX>
        <locationY>5707</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetSelectedPSRSMSTemplate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetNonPSRVATemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedNonPSRVoiceAlertTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedPSRSMSTemplate</name>
        <label>Get Selected PSR SMS Template</label>
        <locationX>282</locationX>
        <locationY>5840</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetSelectedNonPSRSMSTemplate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetPSRSMSTemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedPSRSMSTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedPSRVATemplate</name>
        <label>Get Selected PSR VA Template</label>
        <locationX>456</locationX>
        <locationY>5702</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetSelectedNonPSRVATemplate</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetPSRVATemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedPSRVoiceAlertTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetSelectedZoneIVRTemplate</name>
        <label>Get Selected Zone IVR Template</label>
        <locationX>456</locationX>
        <locationY>6062</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_Query_Restore_Confirmation_Message_From_Msg_Templated</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Name</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetZoneIVRMessageTemplates</elementReference>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_SelectedZoneIVRID</assignToReference>
            <field>Id</field>
        </outputAssignments>
        <outputAssignments>
            <assignToReference>SPEN_SelectedZoneIVRTemplate</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <description>To pick the message template record value to use in case of Restore Confirmation.</description>
        <name>SPEN_Query_Restore_Confirmation_Message_From_Msg_Templated</name>
        <label>Query Restore Confirmation Message From Msg Templated</label>
        <locationX>456</locationX>
        <locationY>6182</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_SelectedTemplateDisplay</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_Purpose__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Restore Confirmation</stringValue>
            </value>
        </filters>
        <object>SPEN_IVRMessage__c</object>
        <outputAssignments>
            <assignToReference>SPEN_RestoreConfirmationMessageReadOnlyTextShownOnFlow</assignToReference>
            <field>SPEN_IVRMessage__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_SetZoneRecordRelatedtoIncidentinVariable</name>
        <label>Set Zone Record Related to Incident in Variable</label>
        <locationX>456</locationX>
        <locationY>566</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_CheckDiffofCommunicationCurrentDecision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <object>Incident</object>
        <outputAssignments>
            <assignToReference>SPEN_ZoneRecordofIncident.Id</assignToReference>
            <field>SPEN_Zone__c</field>
        </outputAssignments>
    </recordLookups>
    <recordLookups>
        <name>SPEN_SMSCommGetRecordTypeId</name>
        <label>SMSCommGetRecordTypeId</label>
        <locationX>456</locationX>
        <locationY>8654</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_InstantwithVoiceAlert</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SmsBroadcast</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_CommunicationScheduler__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_VACommGetRecordTypeId</name>
        <label>VACommGetRecordTypeId</label>
        <locationX>456</locationX>
        <locationY>8534</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_SMSCommGetRecordTypeId</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_VoiceAlertBroadcast</stringValue>
            </value>
        </filters>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_CommunicationScheduler__c</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>SPEN_RemoveIncidentIVRNameandValue</name>
        <label>Remove Incident IVR Name and Value</label>
        <locationX>322</locationX>
        <locationY>4431</locationY>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdVAMessage</targetReference>
        </connector>
        <inputReference>SPEN_GetIncidentRecord</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateCheckboxAfterScreenUpdate</name>
        <label>Update Checkbox After Screen Update</label>
        <locationX>456</locationX>
        <locationY>8414</locationY>
        <connector>
            <targetReference>SPEN_VACommGetRecordTypeId</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SPEN_FaultPathforOwnerIssueMTaskCheckboxUpdate</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_RemoveIncidentIVRMessageAction__c</field>
            <value>
                <elementReference>SPEN_RemoveIncidentIVRMessage.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMSNonPSRCustomerinscopeAction__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoNonPSRCalledinAction__c</field>
            <value>
                <elementReference>SPEN_SendSMStoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoPSRCalledinAction__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendSMStoPSRCustomerinScopeAction__c</field>
            <value>
                <elementReference>SPEN_SendSMStoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoNonPSRCalledinAction__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoNonPSRCustomerinScopeAction__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoPSRCalledinAction__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCalledin.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_SendVAtoPSRCustomersinScopeAction__c</field>
            <value>
                <elementReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_UpdateIncidentIVRMessageAction__c</field>
            <value>
                <elementReference>SPEN_UpdateIncidentIVRMessage.value</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_UpdateZoneIVRMessageAction__c</field>
            <value>
                <elementReference>SPEN_UpdateZoneIVRMessage.value</elementReference>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateIncidentfor3Hours</name>
        <label>UpdateIncidentfor3Hours</label>
        <locationX>324</locationX>
        <locationY>806</locationY>
        <connector>
            <targetReference>SPEN_ToggleScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_LastStatus__c</field>
            <value>
                <stringValue>3HourComfortCall</stringValue>
            </value>
        </inputAssignments>
        <object>Incident</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateIncidentIVRTemplateName</name>
        <label>Update Incident IVR Template Name</label>
        <locationX>324</locationX>
        <locationY>7382</locationY>
        <connector>
            <targetReference>SPEN_UpdateIncidentIVRTemplateValue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_IVRMessages__c</field>
            <value>
                <elementReference>SPEN_SelectedIncidentIVRID</elementReference>
            </value>
        </inputAssignments>
        <object>Incident</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateIncidentIVRTemplateValue</name>
        <label>Update Incident IVR Template Value</label>
        <locationX>324</locationX>
        <locationY>7502</locationY>
        <connector>
            <targetReference>SPEN_UpdateZoneIVRTemplateIfTrueDecision</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_IVRMessage__c</field>
            <value>
                <elementReference>SPEN_DisplayIncidentIVRTemplate</elementReference>
            </value>
        </inputAssignments>
        <object>Incident</object>
    </recordUpdates>
    <recordUpdates>
        <description>This operation updates the messaging task record with  messaging task comments</description>
        <name>SPEN_UpdateMessagingTaskComments</name>
        <label>Update Messaging task comments</label>
        <locationX>190</locationX>
        <locationY>10255</locationY>
        <connector>
            <targetReference>SPEN_FlowEnd</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Cancelled</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_messagingTaskComments__c</field>
            <value>
                <elementReference>SPEN_MessagingTaskComments</elementReference>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateStatus</name>
        <label>Update Status</label>
        <locationX>461</locationX>
        <locationY>10269</locationY>
        <connector>
            <targetReference>SPEN_FlowEnd</targetReference>
        </connector>
        <faultConnector>
            <targetReference>SPEN_FaultPathforOwnerIssue</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateZoneIVRMessageTemplateNameinZoneObject</name>
        <label>Update Zone IVR Message Template Name in Zone Object</label>
        <locationX>324</locationX>
        <locationY>7838</locationY>
        <connector>
            <targetReference>SPEN_UpdateZoneIVRTemplateValue</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_ZoneRecordofIncident.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_IVRMessageTemplate__c</field>
            <value>
                <elementReference>SPEN_SelectedZoneIVRID</elementReference>
            </value>
        </inputAssignments>
        <object>SPEN_Zone__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_UpdateZoneIVRTemplateValue</name>
        <label>Update Zone IVR Template Value</label>
        <locationX>324</locationX>
        <locationY>7958</locationY>
        <connector>
            <targetReference>SPEN_SendCommunicationButtonScreen</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_ZoneRecordofIncident.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>SPEN_BroadcastMessage__c</field>
            <value>
                <elementReference>SPEN_DisplayZoneIVRTemplate</elementReference>
            </value>
        </inputAssignments>
        <object>SPEN_Zone__c</object>
    </recordUpdates>
    <runInMode>DefaultMode</runInMode>
    <screens>
        <name>SPEN_FaultPathforOwnerIssue</name>
        <label>Fault Path for Owner Issue</label>
        <locationX>720</locationX>
        <locationY>10271</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SPEN_DisplayFaultPathforOwnerIssue</name>
            <fieldText>&lt;p&gt;This Messaging task has been superseded by another, please check for an up to date Messaging task. In case if you need any additional information then please get in touch with your Admin with below message.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SPEN_FaultPathforOwnerIssueMTaskCheckboxUpdate</name>
        <label>FaultPathforOwnerIssueMTaskCheckboxUpdate</label>
        <locationX>770</locationX>
        <locationY>8465</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SPEN_DisplayFaultPathforOwnerIssueMTaskCheckboxUpdate</name>
            <fieldText>&lt;p&gt;This Messaging task has been superseded by another, please check for an up to date Messaging task. In case if you need any additional information then please get in touch with your Admin with below message.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SPEN_FlowEnd</name>
        <label>Flow finish</label>
        <locationX>450</locationX>
        <locationY>10412</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <fields>
            <name>SPEN_FlowFinishDisplayMsg</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 18px;&quot;&gt;Click finish to proceed.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <nextOrFinishButtonLabel>Finish</nextOrFinishButtonLabel>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SPEN_SelectedTemplateDisplay</name>
        <label>Selected Template Display</label>
        <locationX>456</locationX>
        <locationY>6302</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SPEN_GetRecordTypeIdSMSBlackoutWindow</targetReference>
        </connector>
        <fields>
            <name>SPEN_DisplayGoNextonDisplayScreen</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Click next to move forward&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SPEN_DisplayIncidentIVRTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedIncidentIVRTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display Incident IVR Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayIncidentIVRTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_UpdateIncidentIVRMessage.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DisplayZoneIVRTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedZoneIVRTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display Zone IVR Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayZoneIVRTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_UpdateZoneIVRMessage.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DisplayPSRSMSTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedPSRSMSTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display PSR SMS Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayPSRSMSTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DisplayNonPSRSMSTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedNonPSRSMSTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display Non PSR SMS Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayNonPSRSMSTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_RestoreMessageFromMessageTemp</name>
            <fieldText>&lt;p&gt;Restoration Confirmation Template :{!SPEN_RestoreConfirmationMessageReadOnlyTextShownOnFlow}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_GetSelectedPSRSMSTemplate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetSelectedNonPSRSMSTemplate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Incident Restored</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_Include_Restoration_Confirmation</name>
            <dataType>Boolean</dataType>
            <fieldText>Include Restoration Confirmation</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND 3 AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_GetSelectedPSRSMSTemplate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetSelectedNonPSRSMSTemplate</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Incident Restored</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Event__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DisplayPSRVoiceAlertTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedPSRVoiceAlertTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display PSR Voice Alert Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayPSRVoiceAlertTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DisplayNonPSRVoiceAlertTemplate</name>
            <defaultValue>
                <stringValue>{!SPEN_SelectedNonPSRVoiceAlertTemplate}</stringValue>
            </defaultValue>
            <fieldText>Display Non PSR Voice Alert Template</fieldText>
            <fieldType>LargeTextArea</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Kindly validate input value as it contains two consecutive &quot;X&quot;, &quot;[&quot; or &quot;]&quot;.&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;XX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;xX&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;Xx&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;xx&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;[&quot;)) &amp;&amp;
NOT(CONTAINS({!SPEN_DisplayNonPSRVoiceAlertTemplate}, &quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SPEN_SendCommunicationButtonScreen</name>
        <label>Send Communication Button Screen</label>
        <locationX>455</locationX>
        <locationY>7976</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SMS_Validation</targetReference>
        </connector>
        <fields>
            <name>SPEN_DisplayGoNextonButtonScreen</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Click next to move forward&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SPEN_SMSBlackoutWindowDisplay</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(8, 8, 8);&quot;&gt;Current blackout window for SMS communication is from start time: &lt;/span&gt;&lt;strong style=&quot;color: rgb(8, 8, 8);&quot;&gt;{!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c}&lt;/strong&gt;&lt;span style=&quot;color: rgb(8, 8, 8);&quot;&gt; to &lt;/span&gt;&lt;span style=&quot;color: rgb(8, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;end time: &lt;/span&gt;&lt;strong style=&quot;color: rgb(8, 8, 8); background-color: rgb(255, 255, 255);&quot;&gt;{!SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5 AND 6 AND 7</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_isActive__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_StartTimeinTextFormula__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourSMSBlackoutWindow.SPEN_EndTimeinTextFormula__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_BlackoutSMSAlertInfo</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 0);&quot;&gt;Instant SMS communication is not available due to current blackout window.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 AND 2)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_compareBetweenBlackoutAndNow</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SMSBlackoutWindowDisplay</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_InstantSMSCommunicationCheckbox</name>
            <dataType>Boolean</dataType>
            <fieldText>Instant SMS Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_compareBetweenBlackoutAndNow</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ScheduleSMSCommunicationCheckbox</name>
            <dataType>Boolean</dataType>
            <fieldText>Schedule SMS Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Both SMS communication checkbox can&apos;t be true at a time &lt;/p&gt;</errorMessage>
                <formulaExpression>NOT({!SPEN_InstantSMSCommunicationCheckbox} &amp;&amp; {!SPEN_ScheduleSMSCommunicationCheckbox})</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DateTimeforScheduleSMSCommunication</name>
            <dataType>DateTime</dataType>
            <fieldText>Date Time for Schedule SMS Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Scheduled date and time can&apos;t be equal or older than current date and time&lt;/p&gt;</errorMessage>
                <formulaExpression>{!SPEN_DateTimeforScheduleSMSCommunication} &gt; {!$Flow.CurrentDateTime}</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_VABlackoutWindowDisplay</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(2, 2, 2); background-color: rgb(255, 255, 255);&quot;&gt;Current blackout window for Voice Alert  communication is from start time: &lt;/span&gt;&lt;strong style=&quot;color: rgb(2, 2, 2); background-color: rgb(255, 255, 255);&quot;&gt;{!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c}&lt;/strong&gt;&lt;span style=&quot;color: rgb(2, 2, 2); background-color: rgb(255, 255, 255);&quot;&gt; to end time:  &lt;/span&gt;&lt;strong style=&quot;color: rgb(2, 2, 2); background-color: rgb(255, 255, 255);&quot;&gt;{!SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c}&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5 AND 6 AND 7</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_isActive__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_StartTimeinTextFormula__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIVROperatingHourVABlackoutWindow.SPEN_EndTimeinTextFormula__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ToShowInfoForVABlackoutPeriod</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(0, 0, 0);&quot;&gt;Instant Voice alert communication is not available due to current blackout window.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 AND 2)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_compareBetweenBlackoutAndNowForVA</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_VABlackoutWindowDisplay</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_InstantVoiceAlertCommunicationCheckbox</name>
            <dataType>Boolean</dataType>
            <fieldText>Instant Voice Alert Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>(1 OR 2 OR 3 OR 4) AND 5</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_compareBetweenBlackoutAndNowForVA</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ScheduleVoiceAlertCommunicationCheckbox</name>
            <dataType>Boolean</dataType>
            <fieldText>Schedule Voice Alert Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Both Voice Alert communication checkbox can&apos;t be true at a time &lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT({!SPEN_InstantVoiceAlertCommunicationCheckbox} &amp;&amp; {!SPEN_ScheduleVoiceAlertCommunicationCheckbox})</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DateTimeforScheduleVoiceAlertCommunication</name>
            <dataType>DateTime</dataType>
            <fieldText>Date Time for Schedule Voice Alert Communication</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;&lt;span style=&quot;color: rgb(68, 68, 68); background-color: rgb(255, 255, 255);&quot;&gt;Scheduled date and time can&apos;t be equal or older than current date and time&lt;/span&gt;&lt;/p&gt;</errorMessage>
                <formulaExpression>{!SPEN_DateTimeforScheduleVoiceAlertCommunication} &gt; {!$Flow.CurrentDateTime}</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ShowErrorMessageDueToMissingCheckbox</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(192, 28, 28);&quot;&gt;Please select all the applicable checkbox to continue.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SMSErrorFlag</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <description>Preview model to show the information before sending.</description>
        <name>SPEN_ShowPreviewInformation</name>
        <label>SPEN_ShowPreviewInformation</label>
        <locationX>1096</locationX>
        <locationY>8330</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SPEN_UpdateCheckboxAfterScreenUpdate</targetReference>
        </connector>
        <fields>
            <name>SPEN_NextMoveInfoHeader</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;Click next to move forward&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SPEN_InfoHeaderPSRSMS</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;You are about to send a PSR SMS alert with the following details.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;Please click Next to confirm.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoForInstantPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_CheckPSRMessageTemplateWithRestoreInformation}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Immediate&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoSMSForSchedulePSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_CheckPSRMessageTemplateWithRestoreInformation}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Scheduled at {!SPEN_DateTimeforScheduleSMSCommunication}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_InfoHeaderNonPSRSMS</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;You are about to send a Non PSR SMS alert with the following details.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;Please click Next to confirm.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoForInstantNonPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_CheckNonPSRMessageTemplateWithRestoreInformation}&lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Immediate&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoSMSForScheduleNonPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_CheckNonPSRMessageTemplateWithRestoreInformation}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Scheduled at {!SPEN_DateTimeforScheduleSMSCommunication}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleSMSCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_VoiceAlertHeaderPSR</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-size: 14px;&quot;&gt;You are about to send a PSR Voice alert with the following details.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;color: rgb(0, 0, 255); font-size: 14px;&quot;&gt;Please click Next to confirm.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoVoiceForInstantPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_DisplayPSRVoiceAlertTemplate}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Immediate&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoVoiceAlertForSchedulePSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_DisplayPSRVoiceAlertTemplate}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Scheduled at {!SPEN_DateTimeforScheduleVoiceAlertCommunication}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_VoiceAlertHeaderNonPSR</name>
            <fieldText>&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;You are about to send a Non PSR Voice alert with the following details.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 14px; color: rgb(0, 0, 255);&quot;&gt;Please click Next to confirm.&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>(1 OR 2) AND (3 OR 4)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoVoiceForInstantNonPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message :&lt;/strong&gt; {!SPEN_DisplayNonPSRVoiceAlertTemplate}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Immediate&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_InstantVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_DetailsInfoVoiceAlertForScheduleNonPSR</name>
            <fieldText>&lt;p&gt;&lt;strong&gt;Message : &lt;/strong&gt;{!SPEN_DisplayNonPSRVoiceAlertTemplate}&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Alert time : &lt;/strong&gt;Scheduled at {!SPEN_DateTimeforScheduleVoiceAlertCommunication}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>1 AND (2 OR 3)</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ScheduleVoiceAlertCommunicationCheckbox</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_MessagingTaskComments</name>
            <dataType>String</dataType>
            <defaultValue>
                <stringValue>[Please enter messaging task comments]</stringValue>
            </defaultValue>
            <fieldText>Messaging Task Comments</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;Please provide details in the Messaging Tasks Comments field to explain why no action has been taken.&lt;/p&gt;</errorMessage>
                <formulaExpression>NOT(CONTAINS({!SPEN_MessagingTaskComments},&quot;[&quot;)) &amp;&amp; NOT(CONTAINS({!SPEN_MessagingTaskComments},&quot;]&quot;))</formulaExpression>
            </validationRule>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_ShowMessagingTaskCommentsFlag</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_checkMessagingTaskDeleted3</name>
            <extensionName>c:sPEN_statusChangeDueToOwnerTransfer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>SPEN_TemplateScreen</name>
        <label>Template Screen</label>
        <locationX>455</locationX>
        <locationY>5581</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SPEN_GetSelectedPSRVATemplate</targetReference>
        </connector>
        <fields>
            <name>SPEN_DisplayGoNextonTemplateScreen</name>
            <fieldText>&lt;p&gt;Click next to move forward&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SPEN_checkMessagingTaskDeleted2</name>
            <extensionName>c:sPEN_statusChangeDueToOwnerTransfer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>SPEN_ChooseIncidentIVRMessageTemplate</name>
            <choiceReferences>SPEN_GetIncidentIVRMessageTemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose Incident IVR Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_UpdateIncidentIVRMessage.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ChooseZoneIVRMessageTemplate</name>
            <choiceReferences>SPEN_GetZoneIVRMessageTemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose Zone IVR Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_UpdateZoneIVRMessage.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ChoosePSRSMSMessageTemplate</name>
            <choiceReferences>SPEN_GetPSRSMSTemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose PSR SMS Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ChooseNonPSRSMSMessageTemplate</name>
            <choiceReferences>SPEN_GetNonPSRSMSTemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose Non PSR SMS Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendSMStoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ChooseVoiceAlertPSRMessageTemplate</name>
            <choiceReferences>SPEN_GetPSRVATemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose Voice Alert PSR Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_ChooseVoiceAlertNonPSRMessageTemplate</name>
            <choiceReferences>SPEN_GetNonPSRVATemplates</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Choose Voice Alert Non PSR Message Template</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCalledin.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_SendVoiceAlertstoNonPSRCustomersinScope.value</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>SPEN_ToggleScreen</name>
        <label>Toggle Screen</label>
        <locationX>458</locationX>
        <locationY>1008</locationY>
        <allowBack>false</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>false</allowPause>
        <connector>
            <targetReference>SPEN_RemoveIncidentIVRMessageDecision</targetReference>
        </connector>
        <fields>
            <name>SPEN_checkMessagingTaskDeleted</name>
            <extensionName>c:sPEN_statusChangeDueToOwnerTransfer</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>recordId</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.Id</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>SPEN_UpdateIncidentIVRMessage</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Update Incident IVR Message</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_UpdateIncidentIVRMessageAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>(1 OR 3) AND 2</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_UpdateIncidentIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_UpdateIncidentIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_UpdateZoneIVRMessage</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Update Zone IVR Message</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_UpdateZoneIVRMessageAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>(1 OR 4 ) AND 2 AND 3</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_UpdateZoneIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ZoneComponentHide</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_UpdateZoneIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_RemoveIncidentIVRMessage</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Remove Incident IVR Message</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_RemoveIncidentIVRMessageAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>(1 OR 3) AND 2</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_RemoveIncidentIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_RemoveIncidentIVRMessageAction__c</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendSMStoPSRCustomersinScope</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send SMS to PSR Customers in Scope</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendSMStoPSRCustomerinScopeAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3) AND 2 AND 4) OR 5</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoPSRCustomerinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoPSRCustomerinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_IncidentRestoredWithConfrmedNeverReached</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendSMStoNonPSRCustomersinScope</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send SMS to Non PSR Customers in Scope</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendSMSNonPSRCustomerinscopeAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3) AND 2) OR 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMSNonPSRCustomerinscopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMSNonPSRCustomerinscopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendSMStoPSRCalledin</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send SMS to PSR Called in</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendSMStoPSRCalledinAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3) AND 2 AND (4 OR 5)) AND 6</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_IncidentRestoredWithConfrmedReached</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_LVPSR</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendSMStoNonPSRCalledin</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send SMS to Non PSR Called in</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendSMStoNonPSRCalledinAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1  OR 3) AND 2) AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoNonPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendSMStoNonPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendVoiceAlertstoPSRCustomersinScope</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send Voice Alerts to PSR Customers in Scope</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendVAtoPSRCustomersinScopeAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3) AND 2 AND 4) OR 5</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoPSRCustomersinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoPSRCustomersinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_IncidentRestoredWithConfrmedNeverReached</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendVoiceAlertstoNonPSRCustomersinScope</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send Voice Alerts to Non PSR Customers in Scope</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendVAtoNonPSRCustomerinScopeAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1  OR 3) AND 2) OR 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoNonPSRCustomerinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoNonPSRCustomerinScopeAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendVoiceAlertstoPSRCalledin</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send Voice Alerts to PSR Called in</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendVAtoPSRCalledinAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3)  AND 2 AND (4 OR 5)) AND 6</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoPSRCalled</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoPSRCalled</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_IncidentRestoredWithConfrmedReached</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_LVPSR</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_SendVoiceAlertstoNonPSRCalledin</name>
            <extensionName>flowruntime:toggle</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Send Voice Alerts to Non PSR Called in</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>value</name>
                <value>
                    <elementReference>SPEN_GetMessagingTaskRecord.SPEN_SendVAtoNonPSRCalledinAction__c</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>((1 OR 3) AND 2) AND 4</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoNonPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_GetIncidentRecord.SPEN_IncidentType__c</leftValueReference>
                    <operator>IsNull</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_CustomMetadataValues_0.SPEN_FieldsToBeShown__c</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>SPEN_SendVAtoNonPSRCalledinAction__c</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>SPEN_ToCheckDroppedSuppliedWithNoticeChecked</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>false</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>SPEN_CompletionStatus</name>
            <fieldText>&lt;p&gt;&lt;strong style=&quot;color: rgb(29, 102, 33); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, system-ui, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Web&amp;quot;, sans-serif; font-size: 16px;&quot;&gt;The task has been completed successfully.&amp;nbsp;Please close the messaging tab to proceed.&lt;/strong&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>SPEN_GetMessagingTaskRecord.SPEN_Status__c</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Completed</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>330</locationX>
        <locationY>48</locationY>
        <connector>
            <targetReference>SPEN_GetMessagingTaskRecord</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>recordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SMSErrorFlag</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_CustomMetadataVariable</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>SPEN_Incident_status_to_action_mapping__mdt</objectType>
    </variables>
    <variables>
        <name>SPEN_recordVars</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>RecordType</objectType>
    </variables>
    <variables>
        <description>To show the read only message on the flow incase of Restore Confirmation</description>
        <name>SPEN_RestoreConfirmationMessageReadOnlyTextShownOnFlow</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedIncidentIVRID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedIncidentIVRTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedNonPSRSMSTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedNonPSRVoiceAlertTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedPSRSMSTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedPSRVoiceAlertTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedZoneIVRID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_SelectedZoneIVRTemplate</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_setofrecordtypeIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_UpdateIncidentIVRMessageCheckbox</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>SPEN_ZoneRecordofIncident</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>SPEN_Zone__c</objectType>
    </variables>
</Flow>
