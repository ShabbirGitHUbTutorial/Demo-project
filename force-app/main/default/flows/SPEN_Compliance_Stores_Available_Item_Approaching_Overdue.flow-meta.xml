<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Sends email notification to users based on previous items in loop.</description>
        <name>Send_Email_Notification</name>
        <label>Send Email Notification</label>
        <locationX>50</locationX>
        <locationY>1824</locationY>
        <actionName>emailSimple</actionName>
        <actionType>emailSimple</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>emailAddresses</name>
            <value>
                <elementReference>$Record.Email</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>senderType</name>
            <value>
                <stringValue>DefaultWorkflowUser</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailSubject</name>
            <value>
                <stringValue>Item Safety Check Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>emailBody</name>
            <value>
                <elementReference>emailCompiledMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>sendRichBody</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>useLineBreaks</name>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputParameters>
        <nameSegment>emailSimple</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <description>Sends desktop notification to users based on previous items in loop.</description>
        <name>Send_Overdue_Notification</name>
        <label>Send Overdue Notification</label>
        <locationX>50</locationX>
        <locationY>1716</locationY>
        <actionName>customNotificationAction</actionName>
        <actionType>customNotificationAction</actionType>
        <connector>
            <targetReference>Send_Email_Notification</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>customNotifTypeId</name>
            <value>
                <elementReference>Custom_Custom_Notification_Type.Id</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>recipientIds</name>
            <value>
                <elementReference>notificationRecipients</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>title</name>
            <value>
                <stringValue>Item Return Warning</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>body</name>
            <value>
                <elementReference>notificationCompiledMessage</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>targetPageRef</name>
            <value>
                <elementReference>notificationTargetPage</elementReference>
            </value>
        </inputParameters>
        <nameSegment>customNotificationAction</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>58.0</apiVersion>
    <assignments>
        <description>Adds 1 to the loop counter. Used to route following iterations correctly.</description>
        <name>Add_1_to_counter</name>
        <label>Add 1 to counter</label>
        <locationX>138</locationX>
        <locationY>1008</locationY>
        <assignmentItems>
            <assignToReference>counter</assignToReference>
            <operator>Add</operator>
            <value>
                <numberValue>1.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Assign_Headers</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds the first row to the email and notification bodies.</description>
        <name>Add_First_Row</name>
        <label>Add First Row</label>
        <locationX>138</locationX>
        <locationY>1224</locationY>
        <assignmentItems>
            <assignToReference>notificationCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>notificationRecordDetails</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>emailRecordDetails</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Serialized_Products_for_Overdue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Adds email and notification bodies for subsequent iterations of the loop.</description>
        <name>Add_Other_Rows</name>
        <label>Add Other Rows</label>
        <locationX>402</locationX>
        <locationY>1008</locationY>
        <assignmentItems>
            <assignToReference>notificationCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>notificationRecordDetails</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>emailRecordDetails</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Serialized_Products_for_Overdue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Counts the number of records found in the previous get records. Used to route flow correctly.</description>
        <name>Add_Record_Count</name>
        <label>Add Record Count</label>
        <locationX>182</locationX>
        <locationY>468</locationY>
        <assignmentItems>
            <assignToReference>recordCounter</assignToReference>
            <operator>AssignCount</operator>
            <value>
                <elementReference>Get_Serialized_Products_for_Notification</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Records_Found</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Sets the loop counter to 0. Used to route the loop correctly on first and following iterations.</description>
        <name>Assign_0_to_counter</name>
        <label>Assign 0 to counter</label>
        <locationX>50</locationX>
        <locationY>684</locationY>
        <assignmentItems>
            <assignToReference>counter</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>0.0</numberValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Serialized_Products_for_Overdue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns the headers to the email and notification bodies.</description>
        <name>Assign_Headers</name>
        <label>Assign Headers</label>
        <locationX>138</locationX>
        <locationY>1116</locationY>
        <assignmentItems>
            <assignToReference>notificationCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>notificationTableHeader</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>emailCompiledMessage</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>emailTableHeader</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Add_First_Row</targetReference>
        </connector>
    </assignments>
    <assignments>
        <description>Assigns the User to the notification recipient variable. Used to send the notification and email correctly.</description>
        <name>Assign_Recipient</name>
        <label>Assign Recipient</label>
        <locationX>50</locationX>
        <locationY>1500</locationY>
        <assignmentItems>
            <assignToReference>notificationRecipients</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Custom_Custom_Notification_Type</targetReference>
        </connector>
    </assignments>
    <constants>
        <name>constantEmpty</name>
        <dataType>String</dataType>
        <value>
            <stringValue></stringValue>
        </value>
    </constants>
    <decisions>
        <description>Check the loop counter. If 0, first iteration. If &gt;0, subsequent loops.</description>
        <name>Check_if_First_Loop</name>
        <label>Check if First Loop</label>
        <locationX>270</locationX>
        <locationY>900</locationY>
        <defaultConnector>
            <targetReference>Add_Other_Rows</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>First</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>counter</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Add_1_to_counter</targetReference>
            </connector>
            <label>First</label>
        </rules>
    </decisions>
    <decisions>
        <description>Checks the return from the counter. Used to route the flow correctly.</description>
        <name>Records_Found</name>
        <label>Records Found?</label>
        <locationX>182</locationX>
        <locationY>576</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>recordCounter</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_0_to_counter</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>Flow that sends a weekly email and notification to Serialized Products&apos; owners or store owners if the item needs a safety check this week.</description>
    <environments>Default</environments>
    <formulas>
        <name>ENDOFTHISWEEK</name>
        <dataType>Date</dataType>
        <expression>TODAY() + 6</expression>
    </formulas>
    <formulas>
        <name>TODAY</name>
        <dataType>Date</dataType>
        <expression>TODAY()</expression>
    </formulas>
    <formulas>
        <name>TODAY_PLUS3</name>
        <dataType>Date</dataType>
        <expression>TODAY() +3</expression>
    </formulas>
    <formulas>
        <name>TOMORROW</name>
        <dataType>Date</dataType>
        <expression>TODAY()+1</expression>
    </formulas>
    <interviewLabel>Compliance Stores - Upcoming Inspection Warning {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Compliance Stores - Available Item Approaching Overdue</label>
    <loops>
        <description>Loop the Serialised Products from the Get Records. Used to assign notification details.</description>
        <name>Serialized_Products_for_Overdue</name>
        <label>Serialized Products for Overdue</label>
        <locationX>50</locationX>
        <locationY>792</locationY>
        <collectionReference>Get_Serialized_Products_for_Notification</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Check_if_First_Loop</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Assign_Recipient</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Gets Custom Notification Type. Used to send correct notification.</description>
        <name>Custom_Custom_Notification_Type</name>
        <label>Custom Custom Notification Type</label>
        <locationX>50</locationX>
        <locationY>1608</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Send_Overdue_Notification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_Overdue_Item_Notification_Desktop_and_Email</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>CustomNotificationType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Gets record type for Serialized Products. Used to filter in the following Get Records element.</description>
        <name>Get_Record_Type_for_Complaince_Stores_Serialized_Products</name>
        <label>Get Record Type for Complaince Stores Serialized Products</label>
        <locationX>182</locationX>
        <locationY>252</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_Serialized_Products_for_Notification</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SerializedProduct</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>SPEN_Compliance_Stores</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Get Records to find items that are due this week. Filtered by record type, active status, and item status.</description>
        <name>Get_Serialized_Products_for_Notification</name>
        <label>Get Serialized Products for Notification</label>
        <locationX>182</locationX>
        <locationY>360</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Record_Count</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RecordTypeId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Record_Type_for_Complaince_Stores_Serialized_Products.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Safety_Check_Date__c</field>
            <operator>LessThanOrEqualTo</operator>
            <value>
                <elementReference>ENDOFTHISWEEK</elementReference>
            </value>
        </filters>
        <filters>
            <field>OwnerId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Item_Status__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Available</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Active__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SerializedProduct</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Record_Type_for_Complaince_Stores_Serialized_Products</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>User</object>
        <schedule>
            <frequency>Weekly</frequency>
            <startDate>2024-02-12</startDate>
            <startTime>07:00:00.000Z</startTime>
        </schedule>
        <triggerType>Scheduled</triggerType>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>emailRecordDetails</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Item: &lt;strong&gt;{!Serialized_Products_for_Overdue.SPEN_Type__c}&lt;/strong&gt;, &lt;strong&gt;{!Serialized_Products_for_Overdue.SPEN_Category__c}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Energy Networks ID: &lt;strong&gt;{!Serialized_Products_for_Overdue.SPEN_Energy_Networks_ID__c}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Location: &lt;strong&gt;{!Serialized_Products_for_Overdue.SPEN_Location_Name__c}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Safety Check Date: &lt;strong&gt;{!Serialized_Products_for_Overdue.SPEN_Safety_Check_Date__c}&lt;/strong&gt;&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>emailTableHeader</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>&lt;p&gt;The below item(s) are either due for a safety check this week or overdue:&lt;/p&gt;</text>
    </textTemplates>
    <textTemplates>
        <name>notificationRecordDetails</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{!constantEmpty}
{!constantEmpty}
Item: {!Serialized_Products_for_Overdue.SPEN_Type__c}, {!Serialized_Products_for_Overdue.SPEN_Category__c}
Location: {!Serialized_Products_for_Overdue.SPEN_Location_Name__c}
Safety Check Date: {!Serialized_Products_for_Overdue.SPEN_Safety_Check_Date__c}</text>
    </textTemplates>
    <textTemplates>
        <name>notificationTableHeader</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>The below item(s) are either due for a safety check this week or overdue:</text>
    </textTemplates>
    <textTemplates>
        <name>notificationTargetPage</name>
        <isViewedAsPlainText>true</isViewedAsPlainText>
        <text>{    
    &quot;type&quot;: &quot;standard__objectPage&quot;,
    &quot;attributes&quot;: {
        &quot;objectApiName&quot;: &quot;SerializedProduct&quot;,
        &quot;actionName&quot;: &quot;list&quot;
    },
    &quot;state&quot;: {
        &quot;filterName&quot;: &quot;My_Upcoming_or_Overdue_Items&quot;
  }
}</text>
    </textTemplates>
    <variables>
        <name>counter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>emailCompiledMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>notificationCompiledMessage</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>notificationRecipients</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>recordCounter</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
</Flow>
