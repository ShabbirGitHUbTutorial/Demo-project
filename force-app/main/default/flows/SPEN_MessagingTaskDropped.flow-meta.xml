<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <decisions>
        <name>SPEN_DecisionforDeletionofExisting3HrComfortEvent</name>
        <label>Decision for Deletion of Existing 3Hr Comfort Event</label>
        <locationX>387</locationX>
        <locationY>1031</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedto3HrComfortUpdateEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_3Hr_Comfort_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskof3HourComforttoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExisting3HrComfort</targetReference>
            </connector>
            <label>Deletion of Existing 3Hr Comfort Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_DecisionforDeletionofExistingDroppedSuppliesBothVersionsEvent</name>
        <label>Decision for Deletion of Existing Dropped Supplies Both Versions Event</label>
        <locationX>1475</locationX>
        <locationY>701</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedtoDroppedSuppliesBothVersionsEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_Dropped_Supplies_Both_Versions_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskofDroppedSuppliesBothVersionstoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExistingDroppedSuppliesBothVersions</targetReference>
            </connector>
            <label>Deletion of Existing Dropped Supplies Both Versions Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_DecisionforDeletionofExistingIncidentETRUpdateEvent</name>
        <label>Decision for Deletion of Existing Incident ETR Update Event</label>
        <locationX>1226</locationX>
        <locationY>962</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedtoIncidentETRUpdateEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_Incident_ETR_Update_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskofIncidentETRUpdatetoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExistingIncidentETRUpdate</targetReference>
            </connector>
            <label>Deletion of Existing Incident ETR Update Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_DecisionforDeletionofExistingResourceAOSEvent</name>
        <label>Decision for Deletion of Existing Resource AOS Event</label>
        <locationX>894</locationX>
        <locationY>1051</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedtoResourceArrivalonSiteEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_Resource_AOS_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskofResourceAOStoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExistingResourceArrivalonSite</targetReference>
            </connector>
            <label>Deletion of Existing Resource AOS Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_DecisionforDeletionofExistingResourceDispatchedEvent</name>
        <label>Decision for Deletion of Existing Resource Dispatched Event</label>
        <locationX>713</locationX>
        <locationY>1041</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedtoResourceDispatchedEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_Resource_Dispatched_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskofResourceDispatchedtoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExistingResourceDispatched</targetReference>
            </connector>
            <label>Deletion of Existing Resource Dispatched Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_DecisionforDeletionofExistingRestoredEvent</name>
        <label>Decision for Deletion of Existing Restored Event</label>
        <locationX>217</locationX>
        <locationY>705</locationY>
        <defaultConnector>
            <targetReference>SPEN_DropTaskRelatedtoRestoredEvent</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Deletion_of_Existing_Restored_Event</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SPEN_GetExistingMessagingTaskofRestoredtoDelete</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_DeleteExistingRestored</targetReference>
            </connector>
            <label>Deletion of Existing Restored Event</label>
        </rules>
    </decisions>
    <decisions>
        <name>SPEN_EventofMessagingTaskCreated</name>
        <label>Event of Messaging Task Created</label>
        <locationX>802</locationX>
        <locationY>713</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>SPEN_RestoredtaskDelog</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Incident Restored</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskofRestoredtoDelete</targetReference>
            </connector>
            <label>Restored task(Delog)</label>
        </rules>
        <rules>
            <name>SPEN_3HrComfortUpdate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>3-Hour Comfort Call</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskof3HourComforttoDelete</targetReference>
            </connector>
            <label>3Hr Comfort Update</label>
        </rules>
        <rules>
            <name>SPEN_ResourceDispatched</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resource Dispatched</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskofResourceDispatchedtoDelete</targetReference>
            </connector>
            <label>Resource Dispatched</label>
        </rules>
        <rules>
            <name>SPEN_ResourceArrivalonSite</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Resource Arrival On Site</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskofResourceAOStoDelete</targetReference>
            </connector>
            <label>Resource Arrival on Site</label>
        </rules>
        <rules>
            <name>SPEN_IncidentETRUpdate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Estimated Restoration Time Extended</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskofIncidentETRUpdatetoDelete</targetReference>
            </connector>
            <label>Incident ETR Update</label>
        </rules>
        <rules>
            <name>SPEN_DroppedSuppliesBothVersions</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Dropped Supply with Notice</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.SPEN_Event__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Dropped Supply without Notice</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>SPEN_GetExistingMessagingTaskofDroppedSuppliesBothVersionstoDelete</targetReference>
            </connector>
            <label>Dropped Supplies Both Versions</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Messaging Task Dro {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Messaging Task Dropped</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordDeletes>
        <name>SPEN_DeleteExisting3HrComfort</name>
        <label>Delete Existing 3Hr Comfort</label>
        <locationX>121</locationX>
        <locationY>1027</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedto3HrComfortUpdateEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordDeletes>
        <name>SPEN_DeleteExistingDroppedSuppliesBothVersions</name>
        <label>Delete Existing Dropped Supplies Both Versions</label>
        <locationX>1628</locationX>
        <locationY>705</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedtoDroppedSuppliesBothVersionsEvent</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordDeletes>
        <name>SPEN_DeleteExistingIncidentETRUpdate</name>
        <label>Delete Existing Incident ETR Update</label>
        <locationX>1400</locationX>
        <locationY>947</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedtoIncidentETRUpdateEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Estimated Restoration Time Extended</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordDeletes>
        <name>SPEN_DeleteExistingResourceArrivalonSite</name>
        <label>Delete Existing Resource Arrival on Site</label>
        <locationX>1059</locationX>
        <locationY>1060</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedtoResourceArrivalonSiteEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Arrival On Site</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordDeletes>
        <name>SPEN_DeleteExistingResourceDispatched</name>
        <label>Delete Existing Resource Dispatched</label>
        <locationX>560</locationX>
        <locationY>1040</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedtoResourceDispatchedEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Dispatched</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordDeletes>
        <name>SPEN_DeleteExistingRestored</name>
        <label>Delete Existing Restored</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <connector>
            <targetReference>SPEN_DropTaskRelatedtoRestoredEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Restored</stringValue>
            </value>
        </filters>
        <object>SPEN_MessagingTask__c</object>
    </recordDeletes>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskof3HourComforttoDelete</name>
        <label>Get Existing Messaging Task of 3-Hour Comfort to Delete</label>
        <locationX>396</locationX>
        <locationY>899</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExisting3HrComfortEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskofDroppedSuppliesBothVersionstoDelete</name>
        <label>Get Existing Messaging Task of Dropped Supplies Both Versions to Delete</label>
        <locationX>1334</locationX>
        <locationY>705</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExistingDroppedSuppliesBothVersionsEvent</targetReference>
        </connector>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskofIncidentETRUpdatetoDelete</name>
        <label>Get Existing Messaging Task of Incident ETR Update to Delete</label>
        <locationX>1158</locationX>
        <locationY>784</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExistingIncidentETRUpdateEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Estimated Restoration Time Extended</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskofResourceAOStoDelete</name>
        <label>Get Existing Messaging Task of Resource AOS to Delete</label>
        <locationX>931</locationX>
        <locationY>902</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExistingResourceAOSEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Arrival On Site</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskofResourceDispatchedtoDelete</name>
        <label>Get Existing Messaging Task of Resource Dispatched to Delete</label>
        <locationX>713</locationX>
        <locationY>882</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExistingResourceDispatchedEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Dispatched</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetExistingMessagingTaskofRestoredtoDelete</name>
        <label>Get Existing Messaging Task of Restored to Delete</label>
        <locationX>381</locationX>
        <locationY>702</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_DecisionforDeletionofExistingRestoredEvent</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Restored</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>SPEN_MessagingTask__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetIncidentRecord</name>
        <label>Get Incident Record</label>
        <locationX>812</locationX>
        <locationY>351</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_GetOwnerDetailsofDroppedUser</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.SPEN_IncidentId__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Incident</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>SPEN_GetOwnerDetailsofDroppedUser</name>
        <label>Get Owner Details of Dropped User</label>
        <locationX>813</locationX>
        <locationY>487</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>SPEN_EventofMessagingTaskCreated</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Alias</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>doutb</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedto3HrComfortUpdateEvent</name>
        <label>Drop Task Related to 3Hr Comfort Update Event</label>
        <locationX>260</locationX>
        <locationY>1238</locationY>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedtoDroppedSuppliesBothVersionsEvent</name>
        <label>Drop Task Related to Dropped Supplies Both Versions Event</label>
        <locationX>1566</locationX>
        <locationY>934</locationY>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6 OR 7)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Dispatched</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Arrival On Site</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedtoIncidentETRUpdateEvent</name>
        <label>Drop Task Related to Incident ETR Update Event</label>
        <locationX>1300</locationX>
        <locationY>1207</locationY>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6 OR 7 OR 8 OR 9)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Dispatched</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Arrival On Site</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedtoResourceArrivalonSiteEvent</name>
        <label>Drop Task Related to Resource Arrival on Site Event</label>
        <locationX>950</locationX>
        <locationY>1285</locationY>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6 OR 7 OR 8)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Resource Dispatched</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedtoResourceDispatchedEvent</name>
        <label>Drop Task Related to Resource Dispatched Event</label>
        <locationX>581</locationX>
        <locationY>1289</locationY>
        <filterLogic>1 AND 2 AND 3 AND (4 OR 5 OR 6 OR 7)</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Incident Created</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply with Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Dropped Supply without Notice</stringValue>
            </value>
        </filters>
        <filters>
            <field>SPEN_Event__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>3-Hour Comfort Call</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <recordUpdates>
        <name>SPEN_DropTaskRelatedtoRestoredEvent</name>
        <label>Drop Task Related to Restored Event</label>
        <locationX>184</locationX>
        <locationY>877</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SPEN_IncidentId__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SPEN_GetIncidentRecord.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>SPEN_Status__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </filters>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <elementReference>SPEN_GetOwnerDetailsofDroppedUser.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>SPEN_Status__c</field>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </inputAssignments>
        <object>SPEN_MessagingTask__c</object>
    </recordUpdates>
    <start>
        <locationX>685</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>SPEN_GetIncidentRecord</targetReference>
        </connector>
        <object>SPEN_MessagingTask__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
