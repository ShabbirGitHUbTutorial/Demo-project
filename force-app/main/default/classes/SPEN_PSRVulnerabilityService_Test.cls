/*-----------------------------------------------------------------------------------------
DESCRIPTION  :  Unit test class for the apex class SPEN_PSRVulnerabilityService
AUTHOR       :  Ayush Mittal
LIBRARY      :  Salesforce Enterprise Library 
VERSION      :  1.0
HISTORY      :
Date            Author                  Comment
NOV-02-2022     Ayush Mittal        Initial version
-----------------------------------------------------------------------------------------*/
@IsTest
public with sharing class SPEN_PSRVulnerabilityService_Test 
{
    @IsTest
    private static void psrAndPSRVulnerabilityTest() 
    {
        Id profileId = SPEN_TestDataFactory.getProfile(SPEN_TestDataFactoryConstants.PROFILENAME);
        User user = SPEN_TestDataFactory.settestUser(SPEN_TestDataFactoryConstants.PROFILENAME);
        Database.insert(user); 
        PermissionSet ps = [SELECT Id FROM PermissionSet WHERE Name = 'SPEN_PSRVulnerabilityTypeAccessCRU'];
		insert new PermissionSetAssignment(AssigneeId = user.id, PermissionSetId = ps.Id);
        PermissionSet ps1 = [SELECT Id FROM PermissionSet WHERE Name = 'SPEN_PremiseAccessCRU'];
        insert new PermissionSetAssignment(AssigneeId = user.id, PermissionSetId = ps1.Id);
        PermissionSet ps2 = [SELECT Id FROM PermissionSet WHERE Name = 'SPEN_ContactAccessCRU'];
        insert new PermissionSetAssignment(AssigneeId = user.id, PermissionSetId = ps2.Id);
        System.runAs(user)
        {   
            Test.startTest();
            
            List<Account> accRec = SPEN_TestDataFactory.createAccounts('Test', 1);
            accRec[0].recordTypeId=Schema.SObjectType.Account.getRecordTypeInfosByDeveloperName().get('Other_Accounts').getRecordTypeId();
            insert accRec;
            Contact conRec = SPEN_TestDataFactory.createContacts(accRec[0].Id, 1);
            conRec.recordtypeid=Schema.SObjectType.Contact.getRecordTypeInfosByDeveloperName().get('SPEN_Contact').getRecordTypeId();
            insert conRec;
            List<SPEN_Premise__c> premiseRec = SPEN_TestDataFactory.createListOfPremise(1);
            insert premiseRec;            
            List<SPEN_PSRVulnerabilityType__c> testPSRVul = SPEN_TestDataFactory.createPSRVulnerabilityRecords();
            insert testPSRVul;
            
            List<SPEN_PSR__c> psrList = new List<SPEN_PSR__c>();
            SPEN_PSR__c psrNew = new SPEN_PSR__c();
            psrNew.SPEN_PSRVulnerabilityType__c = testPSRVul[0].Id;
            psrNew.SPEN_Contact__c = conRec.Id;
            psrNew.SPEN_Premise__c = premiseRec[0].Id;
            psrList.add(psrNew);
            insert psrList;

            List<SPEN_PSR__c> testPSR = SPEN_PSRVulnerabilityService.getPSRRecordForTheContact(conRec.Id);
            List<SPEN_PSRVulnerabilityType__c> testPSRVulType = SPEN_PSRVulnerabilityService.getPSRVulnerabilityList(conRec.Id);
            Boolean flagForCreate = SPEN_PSRVulnerabilityService.createPSRRecord(testPSRVul,conRec.Id);
            SPEN_PSRVulnerabilityService.PsrWrapper objPsrWrapper = new SPEN_PSRVulnerabilityService.PsrWrapper();
            objPsrWrapper.contactId = conRec.Id;
            objPsrWrapper.firstLang = 'BENGALI';
            objPsrWrapper.pSRDetailsValidatedvalue = 'Yes';
            objPsrWrapper.customerHappyvalue = 'Yes';
            objPsrWrapper.firstLang = 'Inbound Call';
            objPsrWrapper.effectiveDate = String.valueOf(Date.today());
            String jsonPSRDetails = JSON.serialize(objPsrWrapper);
            Boolean flagForCreate1 = SPEN_PSRVulnerabilityService.createPSRWithFirstLangOrEffectiveToDate(testPSRVul,jsonPSRDetails);
            SPEN_PSRVulnerabilityService.getPickValue('SPEN_PSR__c','SPEN_FirstLanguage__c');
            //Boolean flagForRemove = SPEN_PSRVulnerabilityService.removePSRRecords(psrList);
            
            List<SPEN_PSRVulnerabilityType__c> psrVulList = new List<SPEN_PSRVulnerabilityType__c>();
            Boolean falseFlagForCreate = SPEN_PSRVulnerabilityService.createPSRRecord(psrVulList, conRec.Id);
            
            Test.stopTest();
            system.assertEquals(testPSRVul[0].SPEN_Code__c, '1', 'Actual and Expected does not match');
            
        }
    }
}